   1               		.file	"util.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.bitpop,"ax",@progbits
  12               	.global	bitpop
  14               	bitpop:
  15               	.LFB0:
  16               		.file 1 "../tmk_core/common/util.c"
   1:../tmk_core/common/util.c **** /*
   2:../tmk_core/common/util.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../tmk_core/common/util.c **** 
   4:../tmk_core/common/util.c **** This program is free software: you can redistribute it and/or modify
   5:../tmk_core/common/util.c **** it under the terms of the GNU General Public License as published by
   6:../tmk_core/common/util.c **** the Free Software Foundation, either version 2 of the License, or
   7:../tmk_core/common/util.c **** (at your option) any later version.
   8:../tmk_core/common/util.c **** 
   9:../tmk_core/common/util.c **** This program is distributed in the hope that it will be useful,
  10:../tmk_core/common/util.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../tmk_core/common/util.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../tmk_core/common/util.c **** GNU General Public License for more details.
  13:../tmk_core/common/util.c **** 
  14:../tmk_core/common/util.c **** You should have received a copy of the GNU General Public License
  15:../tmk_core/common/util.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../tmk_core/common/util.c **** */
  17:../tmk_core/common/util.c **** 
  18:../tmk_core/common/util.c **** #include "util.h"
  19:../tmk_core/common/util.c **** 
  20:../tmk_core/common/util.c **** // bit population - return number of on-bit
  21:../tmk_core/common/util.c **** uint8_t bitpop(uint8_t bits)
  22:../tmk_core/common/util.c **** {
  17               		.loc 1 22 0
  18               		.cfi_startproc
  19               	.LVL0:
  20               	/* prologue: function */
  21               	/* frame size = 0 */
  22               	/* stack size = 0 */
  23               	.L__stack_usage = 0
  23:../tmk_core/common/util.c ****     uint8_t c;
  24:../tmk_core/common/util.c ****     for (c = 0; bits; c++)
  24               		.loc 1 24 0
  25 0000 90E0      		ldi r25,0
  26               	.LVL1:
  27               	.L2:
  28               		.loc 1 24 0 is_stmt 0 discriminator 1
  29 0002 8823      		tst r24
  30 0004 01F0      		breq .L5
  25:../tmk_core/common/util.c ****         bits &= bits - 1;
  31               		.loc 1 25 0 is_stmt 1 discriminator 3
  32 0006 2FEF      		ldi r18,lo8(-1)
  33 0008 280F      		add r18,r24
  34 000a 8223      		and r24,r18
  35               	.LVL2:
  24:../tmk_core/common/util.c ****         bits &= bits - 1;
  36               		.loc 1 24 0 discriminator 3
  37 000c 9F5F      		subi r25,lo8(-(1))
  38               	.LVL3:
  39 000e 00C0      		rjmp .L2
  40               	.L5:
  26:../tmk_core/common/util.c ****     return c;
  27:../tmk_core/common/util.c **** /*
  28:../tmk_core/common/util.c ****     const uint8_t bit_count[] = { 0, 1, 1, 2, 1, 2, 2, 3, 1, 2, 2, 3, 2, 3, 3, 4 };
  29:../tmk_core/common/util.c ****     return bit_count[bits>>4] + bit_count[bits&0x0F]
  30:../tmk_core/common/util.c **** */
  31:../tmk_core/common/util.c **** }
  41               		.loc 1 31 0
  42 0010 892F      		mov r24,r25
  43               	.LVL4:
  44 0012 0895      		ret
  45               		.cfi_endproc
  46               	.LFE0:
  48               		.section	.text.bitpop16,"ax",@progbits
  49               	.global	bitpop16
  51               	bitpop16:
  52               	.LFB1:
  32:../tmk_core/common/util.c **** 
  33:../tmk_core/common/util.c **** uint8_t bitpop16(uint16_t bits)
  34:../tmk_core/common/util.c **** {
  53               		.loc 1 34 0
  54               		.cfi_startproc
  55               	.LVL5:
  56               	/* prologue: function */
  57               	/* frame size = 0 */
  58               	/* stack size = 0 */
  59               	.L__stack_usage = 0
  35:../tmk_core/common/util.c ****     uint8_t c;
  36:../tmk_core/common/util.c ****     for (c = 0; bits; c++)
  60               		.loc 1 36 0
  61 0000 20E0      		ldi r18,0
  62               	.LVL6:
  63               	.L7:
  64               		.loc 1 36 0 is_stmt 0 discriminator 1
  65 0002 0097      		sbiw r24,0
  66 0004 01F0      		breq .L9
  37:../tmk_core/common/util.c ****         bits &= bits - 1;
  67               		.loc 1 37 0 is_stmt 1 discriminator 3
  68 0006 AC01      		movw r20,r24
  69 0008 4150      		subi r20,1
  70 000a 5109      		sbc r21,__zero_reg__
  71 000c 8423      		and r24,r20
  72 000e 9523      		and r25,r21
  73               	.LVL7:
  36:../tmk_core/common/util.c ****         bits &= bits - 1;
  74               		.loc 1 36 0 discriminator 3
  75 0010 2F5F      		subi r18,lo8(-(1))
  76               	.LVL8:
  77 0012 00C0      		rjmp .L7
  78               	.L9:
  38:../tmk_core/common/util.c ****     return c;
  39:../tmk_core/common/util.c **** }
  79               		.loc 1 39 0
  80 0014 822F      		mov r24,r18
  81               	.LVL9:
  82 0016 0895      		ret
  83               		.cfi_endproc
  84               	.LFE1:
  86               		.section	.text.bitpop32,"ax",@progbits
  87               	.global	bitpop32
  89               	bitpop32:
  90               	.LFB2:
  40:../tmk_core/common/util.c **** 
  41:../tmk_core/common/util.c **** uint8_t bitpop32(uint32_t bits)
  42:../tmk_core/common/util.c **** {
  91               		.loc 1 42 0
  92               		.cfi_startproc
  93               	.LVL10:
  94 0000 CF92      		push r12
  95               	.LCFI0:
  96               		.cfi_def_cfa_offset 3
  97               		.cfi_offset 12, -2
  98 0002 DF92      		push r13
  99               	.LCFI1:
 100               		.cfi_def_cfa_offset 4
 101               		.cfi_offset 13, -3
 102 0004 EF92      		push r14
 103               	.LCFI2:
 104               		.cfi_def_cfa_offset 5
 105               		.cfi_offset 14, -4
 106 0006 FF92      		push r15
 107               	.LCFI3:
 108               		.cfi_def_cfa_offset 6
 109               		.cfi_offset 15, -5
 110               	/* prologue: function */
 111               	/* frame size = 0 */
 112               	/* stack size = 4 */
 113               	.L__stack_usage = 4
 114               	.LVL11:
  43:../tmk_core/common/util.c ****     uint8_t c;
  44:../tmk_core/common/util.c ****     for (c = 0; bits; c++)
 115               		.loc 1 44 0
 116 0008 20E0      		ldi r18,0
 117               	.LVL12:
 118               	.L11:
 119               		.loc 1 44 0 is_stmt 0 discriminator 1
 120 000a 6115      		cp r22,__zero_reg__
 121 000c 7105      		cpc r23,__zero_reg__
 122 000e 8105      		cpc r24,__zero_reg__
 123 0010 9105      		cpc r25,__zero_reg__
 124 0012 01F0      		breq .L13
  45:../tmk_core/common/util.c ****         bits &= bits - 1;
 125               		.loc 1 45 0 is_stmt 1 discriminator 3
 126 0014 6B01      		movw r12,r22
 127 0016 7C01      		movw r14,r24
 128 0018 31E0      		ldi r19,1
 129 001a C31A      		sub r12,r19
 130 001c D108      		sbc r13,__zero_reg__
 131 001e E108      		sbc r14,__zero_reg__
 132 0020 F108      		sbc r15,__zero_reg__
 133 0022 6C21      		and r22,r12
 134 0024 7D21      		and r23,r13
 135 0026 8E21      		and r24,r14
 136 0028 9F21      		and r25,r15
 137               	.LVL13:
  44:../tmk_core/common/util.c ****         bits &= bits - 1;
 138               		.loc 1 44 0 discriminator 3
 139 002a 2F5F      		subi r18,lo8(-(1))
 140               	.LVL14:
 141 002c 00C0      		rjmp .L11
 142               	.L13:
  46:../tmk_core/common/util.c ****     return c;
  47:../tmk_core/common/util.c **** }
 143               		.loc 1 47 0
 144 002e 822F      		mov r24,r18
 145               	/* epilogue start */
 146 0030 FF90      		pop r15
 147 0032 EF90      		pop r14
 148 0034 DF90      		pop r13
 149 0036 CF90      		pop r12
 150 0038 0895      		ret
 151               		.cfi_endproc
 152               	.LFE2:
 154               		.section	.text.biton,"ax",@progbits
 155               	.global	biton
 157               	biton:
 158               	.LFB3:
  48:../tmk_core/common/util.c **** 
  49:../tmk_core/common/util.c **** // most significant on-bit - return highest location of on-bit
  50:../tmk_core/common/util.c **** // NOTE: return 0 when bit0 is on or all bits are off
  51:../tmk_core/common/util.c **** uint8_t biton(uint8_t bits)
  52:../tmk_core/common/util.c **** {
 159               		.loc 1 52 0
 160               		.cfi_startproc
 161               	.LVL15:
 162               	/* prologue: function */
 163               	/* frame size = 0 */
 164               	/* stack size = 0 */
 165               	.L__stack_usage = 0
  53:../tmk_core/common/util.c ****     uint8_t n = 0;
  54:../tmk_core/common/util.c ****     if (bits >> 4) { bits >>= 4; n += 4;}
 166               		.loc 1 54 0
 167 0000 982F      		mov r25,r24
 168 0002 9295      		swap r25
 169 0004 9F70      		andi r25,lo8(15)
 170 0006 01F0      		breq .L18
 171 0008 892F      		mov r24,r25
 172               	.LVL16:
 173 000a 24E0      		ldi r18,lo8(4)
 174 000c 00C0      		rjmp .L15
 175               	.LVL17:
 176               	.L18:
  53:../tmk_core/common/util.c ****     uint8_t n = 0;
 177               		.loc 1 53 0
 178 000e 20E0      		ldi r18,0
 179               	.LVL18:
 180               	.L15:
  55:../tmk_core/common/util.c ****     if (bits >> 2) { bits >>= 2; n += 2;}
 181               		.loc 1 55 0
 182 0010 982F      		mov r25,r24
 183 0012 9695      		lsr r25
 184 0014 9695      		lsr r25
 185 0016 01F0      		breq .L16
 186               	.LVL19:
 187               		.loc 1 55 0 is_stmt 0 discriminator 1
 188 0018 2E5F      		subi r18,lo8(-(2))
 189               	.LVL20:
 190 001a 892F      		mov r24,r25
 191               	.LVL21:
 192               	.L16:
  56:../tmk_core/common/util.c ****     if (bits >> 1) { bits >>= 1; n += 1;}
 193               		.loc 1 56 0 is_stmt 1
 194 001c 982F      		mov r25,r24
 195 001e 9695      		lsr r25
 196 0020 01F0      		breq .L17
 197               	.LVL22:
 198               		.loc 1 56 0 is_stmt 0 discriminator 1
 199 0022 2F5F      		subi r18,lo8(-(1))
 200               	.LVL23:
 201               	.L17:
  57:../tmk_core/common/util.c ****     return n;
  58:../tmk_core/common/util.c **** }
 202               		.loc 1 58 0 is_stmt 1
 203 0024 822F      		mov r24,r18
 204 0026 0895      		ret
 205               		.cfi_endproc
 206               	.LFE3:
 208               		.section	.text.biton16,"ax",@progbits
 209               	.global	biton16
 211               	biton16:
 212               	.LFB4:
  59:../tmk_core/common/util.c **** 
  60:../tmk_core/common/util.c **** uint8_t biton16(uint16_t bits)
  61:../tmk_core/common/util.c **** {
 213               		.loc 1 61 0
 214               		.cfi_startproc
 215               	.LVL24:
 216               	/* prologue: function */
 217               	/* frame size = 0 */
 218               	/* stack size = 0 */
 219               	.L__stack_usage = 0
  62:../tmk_core/common/util.c ****     uint8_t n = 0;
  63:../tmk_core/common/util.c ****     if (bits >> 8) { bits >>= 8; n += 8;}
 220               		.loc 1 63 0
 221 0000 292F      		mov r18,r25
 222 0002 3327      		clr r19
 223 0004 2115      		cp r18,__zero_reg__
 224 0006 3105      		cpc r19,__zero_reg__
 225 0008 01F0      		breq .L30
 226 000a C901      		movw r24,r18
 227               	.LVL25:
 228 000c 48E0      		ldi r20,lo8(8)
 229 000e 00C0      		rjmp .L26
 230               	.LVL26:
 231               	.L30:
  62:../tmk_core/common/util.c ****     uint8_t n = 0;
 232               		.loc 1 62 0
 233 0010 40E0      		ldi r20,0
 234               	.LVL27:
 235               	.L26:
  64:../tmk_core/common/util.c ****     if (bits >> 4) { bits >>= 4; n += 4;}
 236               		.loc 1 64 0
 237 0012 9C01      		movw r18,r24
 238 0014 64E0      		ldi r22,4
 239               		1:
 240 0016 3695      		lsr r19
 241 0018 2795      		ror r18
 242 001a 6A95      		dec r22
 243 001c 01F4      		brne 1b
 244 001e 2115      		cp r18,__zero_reg__
 245 0020 3105      		cpc r19,__zero_reg__
 246 0022 01F0      		breq .L27
 247               	.LVL28:
 248               		.loc 1 64 0 is_stmt 0 discriminator 1
 249 0024 4C5F      		subi r20,lo8(-(4))
 250               	.LVL29:
 251 0026 C901      		movw r24,r18
 252               	.LVL30:
 253               	.L27:
  65:../tmk_core/common/util.c ****     if (bits >> 2) { bits >>= 2; n += 2;}
 254               		.loc 1 65 0 is_stmt 1
 255 0028 9C01      		movw r18,r24
 256 002a 3695      		lsr r19
 257 002c 2795      		ror r18
 258 002e 3695      		lsr r19
 259 0030 2795      		ror r18
 260 0032 2115      		cp r18,__zero_reg__
 261 0034 3105      		cpc r19,__zero_reg__
 262 0036 01F0      		breq .L28
 263               	.LVL31:
 264               		.loc 1 65 0 is_stmt 0 discriminator 1
 265 0038 4E5F      		subi r20,lo8(-(2))
 266               	.LVL32:
 267 003a C901      		movw r24,r18
 268               	.LVL33:
 269               	.L28:
  66:../tmk_core/common/util.c ****     if (bits >> 1) { bits >>= 1; n += 1;}
 270               		.loc 1 66 0 is_stmt 1
 271 003c 9C01      		movw r18,r24
 272 003e 3695      		lsr r19
 273 0040 2795      		ror r18
 274               	.LVL34:
 275 0042 232B      		or r18,r19
 276 0044 01F0      		breq .L29
 277               		.loc 1 66 0 is_stmt 0 discriminator 1
 278 0046 4F5F      		subi r20,lo8(-(1))
 279               	.LVL35:
 280               	.L29:
  67:../tmk_core/common/util.c ****     return n;
  68:../tmk_core/common/util.c **** }
 281               		.loc 1 68 0 is_stmt 1
 282 0048 842F      		mov r24,r20
 283 004a 0895      		ret
 284               		.cfi_endproc
 285               	.LFE4:
 287               		.section	.text.biton32,"ax",@progbits
 288               	.global	biton32
 290               	biton32:
 291               	.LFB5:
  69:../tmk_core/common/util.c **** 
  70:../tmk_core/common/util.c **** uint8_t biton32(uint32_t bits)
  71:../tmk_core/common/util.c **** {
 292               		.loc 1 71 0
 293               		.cfi_startproc
 294               	.LVL36:
 295 0000 CF92      		push r12
 296               	.LCFI4:
 297               		.cfi_def_cfa_offset 3
 298               		.cfi_offset 12, -2
 299 0002 DF92      		push r13
 300               	.LCFI5:
 301               		.cfi_def_cfa_offset 4
 302               		.cfi_offset 13, -3
 303 0004 EF92      		push r14
 304               	.LCFI6:
 305               		.cfi_def_cfa_offset 5
 306               		.cfi_offset 14, -4
 307 0006 FF92      		push r15
 308               	.LCFI7:
 309               		.cfi_def_cfa_offset 6
 310               		.cfi_offset 15, -5
 311               	/* prologue: function */
 312               	/* frame size = 0 */
 313               	/* stack size = 4 */
 314               	.L__stack_usage = 4
 315               	.LVL37:
  72:../tmk_core/common/util.c ****     uint8_t n = 0;
  73:../tmk_core/common/util.c ****     if (bits >>16) { bits >>=16; n +=16;}
 316               		.loc 1 73 0
 317 0008 6C01      		movw r12,r24
 318 000a EE24      		clr r14
 319 000c FF24      		clr r15
 320 000e C114      		cp r12,__zero_reg__
 321 0010 D104      		cpc r13,__zero_reg__
 322 0012 E104      		cpc r14,__zero_reg__
 323 0014 F104      		cpc r15,__zero_reg__
 324 0016 01F0      		breq .L46
 325 0018 C701      		movw r24,r14
 326 001a B601      		movw r22,r12
 327               	.LVL38:
 328 001c 20E1      		ldi r18,lo8(16)
 329 001e 00C0      		rjmp .L41
 330               	.LVL39:
 331               	.L46:
  72:../tmk_core/common/util.c ****     uint8_t n = 0;
 332               		.loc 1 72 0
 333 0020 20E0      		ldi r18,0
 334               	.LVL40:
 335               	.L41:
  74:../tmk_core/common/util.c ****     if (bits >> 8) { bits >>= 8; n += 8;}
 336               		.loc 1 74 0
 337 0022 C72E      		mov r12,r23
 338 0024 D82E      		mov r13,r24
 339 0026 E92E      		mov r14,r25
 340 0028 FF24      		clr r15
 341 002a C114      		cp r12,__zero_reg__
 342 002c D104      		cpc r13,__zero_reg__
 343 002e E104      		cpc r14,__zero_reg__
 344 0030 F104      		cpc r15,__zero_reg__
 345 0032 01F0      		breq .L42
 346               	.LVL41:
 347               		.loc 1 74 0 is_stmt 0 discriminator 1
 348 0034 285F      		subi r18,lo8(-(8))
 349               	.LVL42:
 350 0036 C701      		movw r24,r14
 351 0038 B601      		movw r22,r12
 352               	.LVL43:
 353               	.L42:
  75:../tmk_core/common/util.c ****     if (bits >> 4) { bits >>= 4; n += 4;}
 354               		.loc 1 75 0 is_stmt 1
 355 003a 6B01      		movw r12,r22
 356 003c 7C01      		movw r14,r24
 357 003e 54E0      		ldi r21,4
 358               		1:
 359 0040 F694      		lsr r15
 360 0042 E794      		ror r14
 361 0044 D794      		ror r13
 362 0046 C794      		ror r12
 363 0048 5A95      		dec r21
 364 004a 01F4      		brne 1b
 365 004c C114      		cp r12,__zero_reg__
 366 004e D104      		cpc r13,__zero_reg__
 367 0050 E104      		cpc r14,__zero_reg__
 368 0052 F104      		cpc r15,__zero_reg__
 369 0054 01F0      		breq .L43
 370               	.LVL44:
 371               		.loc 1 75 0 is_stmt 0 discriminator 1
 372 0056 2C5F      		subi r18,lo8(-(4))
 373               	.LVL45:
 374 0058 C701      		movw r24,r14
 375 005a B601      		movw r22,r12
 376               	.LVL46:
 377               	.L43:
  76:../tmk_core/common/util.c ****     if (bits >> 2) { bits >>= 2; n += 2;}
 378               		.loc 1 76 0 is_stmt 1
 379 005c 6B01      		movw r12,r22
 380 005e 7C01      		movw r14,r24
 381 0060 42E0      		ldi r20,2
 382               		1:
 383 0062 F694      		lsr r15
 384 0064 E794      		ror r14
 385 0066 D794      		ror r13
 386 0068 C794      		ror r12
 387 006a 4A95      		dec r20
 388 006c 01F4      		brne 1b
 389 006e C114      		cp r12,__zero_reg__
 390 0070 D104      		cpc r13,__zero_reg__
 391 0072 E104      		cpc r14,__zero_reg__
 392 0074 F104      		cpc r15,__zero_reg__
 393 0076 01F0      		breq .L44
 394               	.LVL47:
 395               		.loc 1 76 0 is_stmt 0 discriminator 1
 396 0078 2E5F      		subi r18,lo8(-(2))
 397               	.LVL48:
 398 007a C701      		movw r24,r14
 399 007c B601      		movw r22,r12
 400               	.LVL49:
 401               	.L44:
  77:../tmk_core/common/util.c ****     if (bits >> 1) { bits >>= 1; n += 1;}
 402               		.loc 1 77 0 is_stmt 1
 403 007e DC01      		movw r26,r24
 404 0080 CB01      		movw r24,r22
 405 0082 B695      		lsr r27
 406 0084 A795      		ror r26
 407 0086 9795      		ror r25
 408 0088 8795      		ror r24
 409 008a 892B      		or r24,r25
 410 008c 8A2B      		or r24,r26
 411 008e 8B2B      		or r24,r27
 412 0090 01F0      		breq .L45
 413               	.LVL50:
 414               		.loc 1 77 0 is_stmt 0 discriminator 1
 415 0092 2F5F      		subi r18,lo8(-(1))
 416               	.LVL51:
 417               	.L45:
  78:../tmk_core/common/util.c ****     return n;
  79:../tmk_core/common/util.c **** }
 418               		.loc 1 79 0 is_stmt 1
 419 0094 822F      		mov r24,r18
 420               	/* epilogue start */
 421 0096 FF90      		pop r15
 422 0098 EF90      		pop r14
 423 009a DF90      		pop r13
 424 009c CF90      		pop r12
 425 009e 0895      		ret
 426               		.cfi_endproc
 427               	.LFE5:
 429               		.section	.text.bitrev,"ax",@progbits
 430               	.global	bitrev
 432               	bitrev:
 433               	.LFB6:
  80:../tmk_core/common/util.c **** 
  81:../tmk_core/common/util.c **** 
  82:../tmk_core/common/util.c **** 
  83:../tmk_core/common/util.c **** uint8_t bitrev(uint8_t bits)
  84:../tmk_core/common/util.c **** {
 434               		.loc 1 84 0
 435               		.cfi_startproc
 436               	.LVL52:
 437               	/* prologue: function */
 438               	/* frame size = 0 */
 439               	/* stack size = 0 */
 440               	.L__stack_usage = 0
  85:../tmk_core/common/util.c ****     bits = (bits & 0x0f)<<4 | (bits & 0xf0)>>4;
 441               		.loc 1 85 0
 442 0000 8295      		swap r24
 443               	.LVL53:
  86:../tmk_core/common/util.c ****     bits = (bits & 0b00110011)<<2 | (bits & 0b11001100)>>2;
 444               		.loc 1 86 0
 445 0002 982F      		mov r25,r24
 446 0004 9C7C      		andi r25,lo8(-52)
 447 0006 392F      		mov r19,r25
 448 0008 3695      		lsr r19
 449 000a 3695      		lsr r19
 450 000c 282F      		mov r18,r24
 451 000e 2373      		andi r18,lo8(51)
 452 0010 44E0      		ldi r20,lo8(4)
 453 0012 249F      		mul r18,r20
 454 0014 C001      		movw r24,r0
 455 0016 1124      		clr __zero_reg__
 456               	.LVL54:
 457 0018 932F      		mov r25,r19
 458 001a 982B      		or r25,r24
 459               	.LVL55:
  87:../tmk_core/common/util.c ****     bits = (bits & 0b01010101)<<1 | (bits & 0b10101010)>>1;
 460               		.loc 1 87 0
 461 001c 292F      		mov r18,r25
 462 001e 2A7A      		andi r18,lo8(-86)
 463 0020 2695      		lsr r18
 464 0022 892F      		mov r24,r25
 465 0024 8575      		andi r24,lo8(85)
 466 0026 880F      		lsl r24
 467               	.LVL56:
  88:../tmk_core/common/util.c ****     return bits;
  89:../tmk_core/common/util.c **** }
 468               		.loc 1 89 0
 469 0028 822B      		or r24,r18
 470               	.LVL57:
 471 002a 0895      		ret
 472               		.cfi_endproc
 473               	.LFE6:
 475               		.section	.text.bitrev16,"ax",@progbits
 476               	.global	bitrev16
 478               	bitrev16:
 479               	.LFB7:
  90:../tmk_core/common/util.c **** 
  91:../tmk_core/common/util.c **** uint16_t bitrev16(uint16_t bits)
  92:../tmk_core/common/util.c **** {
 480               		.loc 1 92 0
 481               		.cfi_startproc
 482               	.LVL58:
 483 0000 1F93      		push r17
 484               	.LCFI8:
 485               		.cfi_def_cfa_offset 3
 486               		.cfi_offset 17, -2
 487 0002 CF93      		push r28
 488               	.LCFI9:
 489               		.cfi_def_cfa_offset 4
 490               		.cfi_offset 28, -3
 491 0004 DF93      		push r29
 492               	.LCFI10:
 493               		.cfi_def_cfa_offset 5
 494               		.cfi_offset 29, -4
 495 0006 1F92      		push __zero_reg__
 496               	.LCFI11:
 497               		.cfi_def_cfa_offset 6
 498 0008 CDB7      		in r28,__SP_L__
 499 000a DEB7      		in r29,__SP_H__
 500               	.LCFI12:
 501               		.cfi_def_cfa_register 28
 502               	/* prologue: function */
 503               	/* frame size = 1 */
 504               	/* stack size = 4 */
 505               	.L__stack_usage = 4
  93:../tmk_core/common/util.c ****     bits = bitrev(bits & 0x00ff)<<8 | bitrev((bits & 0xff00)>>8);
 506               		.loc 1 93 0
 507 000c 9983      		std Y+1,r25
 508 000e 0E94 0000 		call bitrev
 509               	.LVL59:
 510 0012 182F      		mov r17,r24
 511 0014 9981      		ldd r25,Y+1
 512 0016 892F      		mov r24,r25
 513 0018 0E94 0000 		call bitrev
 514               	.LVL60:
 515 001c 212F      		mov r18,r17
 516 001e 30E0      		ldi r19,0
 517 0020 322F      		mov r19,r18
 518 0022 2227      		clr r18
  94:../tmk_core/common/util.c ****     return bits;
  95:../tmk_core/common/util.c **** }
 519               		.loc 1 95 0
 520 0024 A901      		movw r20,r18
 521 0026 482B      		or r20,r24
 522 0028 CA01      		movw r24,r20
 523               	.LVL61:
 524               	/* epilogue start */
 525 002a 0F90      		pop __tmp_reg__
 526 002c DF91      		pop r29
 527 002e CF91      		pop r28
 528 0030 1F91      		pop r17
 529 0032 0895      		ret
 530               		.cfi_endproc
 531               	.LFE7:
 533               		.section	.text.bitrev32,"ax",@progbits
 534               	.global	bitrev32
 536               	bitrev32:
 537               	.LFB8:
  96:../tmk_core/common/util.c **** 
  97:../tmk_core/common/util.c **** uint32_t bitrev32(uint32_t bits)
  98:../tmk_core/common/util.c **** {
 538               		.loc 1 98 0
 539               		.cfi_startproc
 540               	.LVL62:
 541 0000 CF92      		push r12
 542               	.LCFI13:
 543               		.cfi_def_cfa_offset 3
 544               		.cfi_offset 12, -2
 545 0002 DF92      		push r13
 546               	.LCFI14:
 547               		.cfi_def_cfa_offset 4
 548               		.cfi_offset 13, -3
 549 0004 EF92      		push r14
 550               	.LCFI15:
 551               		.cfi_def_cfa_offset 5
 552               		.cfi_offset 14, -4
 553 0006 FF92      		push r15
 554               	.LCFI16:
 555               		.cfi_def_cfa_offset 6
 556               		.cfi_offset 15, -5
 557 0008 0F93      		push r16
 558               	.LCFI17:
 559               		.cfi_def_cfa_offset 7
 560               		.cfi_offset 16, -6
 561 000a 1F93      		push r17
 562               	.LCFI18:
 563               		.cfi_def_cfa_offset 8
 564               		.cfi_offset 17, -7
 565 000c CF93      		push r28
 566               	.LCFI19:
 567               		.cfi_def_cfa_offset 9
 568               		.cfi_offset 28, -8
 569 000e DF93      		push r29
 570               	.LCFI20:
 571               		.cfi_def_cfa_offset 10
 572               		.cfi_offset 29, -9
 573               	/* prologue: function */
 574               	/* frame size = 0 */
 575               	/* stack size = 8 */
 576               	.L__stack_usage = 8
 577 0010 6B01      		movw r12,r22
 578 0012 7C01      		movw r14,r24
  99:../tmk_core/common/util.c ****     bits = (uint32_t)bitrev16(bits & 0x0000ffff)<<16 | bitrev16((bits & 0xffff0000)>>16);
 579               		.loc 1 99 0
 580 0014 CB01      		movw r24,r22
 581 0016 0E94 0000 		call bitrev16
 582               	.LVL63:
 583 001a EC01      		movw r28,r24
 584 001c C701      		movw r24,r14
 585 001e 0E94 0000 		call bitrev16
 586               	.LVL64:
 587 0022 AC01      		movw r20,r24
 588               	.LVL65:
 589 0024 CE01      		movw r24,r28
 590 0026 A0E0      		ldi r26,0
 591 0028 B0E0      		ldi r27,0
 592 002a DC01      		movw r26,r24
 593 002c 9927      		clr r25
 594 002e 8827      		clr r24
 595 0030 60E0      		ldi r22,0
 596 0032 70E0      		ldi r23,0
 597 0034 8C01      		movw r16,r24
 598 0036 9D01      		movw r18,r26
 599 0038 042B      		or r16,r20
 600 003a 152B      		or r17,r21
 601 003c 262B      		or r18,r22
 602 003e 372B      		or r19,r23
 603 0040 C901      		movw r24,r18
 604 0042 B801      		movw r22,r16
 605               	/* epilogue start */
 100:../tmk_core/common/util.c ****     return bits;
 101:../tmk_core/common/util.c **** }
 606               		.loc 1 101 0
 607 0044 DF91      		pop r29
 608 0046 CF91      		pop r28
 609               	.LVL66:
 610 0048 1F91      		pop r17
 611 004a 0F91      		pop r16
 612 004c FF90      		pop r15
 613 004e EF90      		pop r14
 614 0050 DF90      		pop r13
 615 0052 CF90      		pop r12
 616 0054 0895      		ret
 617               		.cfi_endproc
 618               	.LFE8:
 620               		.text
 621               	.Letext0:
 622               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 util.c
     /tmp/ccCniRrz.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccCniRrz.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccCniRrz.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccCniRrz.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccCniRrz.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccCniRrz.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccCniRrz.s:14     .text.bitpop:0000000000000000 bitpop
     /tmp/ccCniRrz.s:51     .text.bitpop16:0000000000000000 bitpop16
     /tmp/ccCniRrz.s:89     .text.bitpop32:0000000000000000 bitpop32
     /tmp/ccCniRrz.s:157    .text.biton:0000000000000000 biton
     /tmp/ccCniRrz.s:211    .text.biton16:0000000000000000 biton16
     /tmp/ccCniRrz.s:290    .text.biton32:0000000000000000 biton32
     /tmp/ccCniRrz.s:432    .text.bitrev:0000000000000000 bitrev
     /tmp/ccCniRrz.s:478    .text.bitrev16:0000000000000000 bitrev16
     /tmp/ccCniRrz.s:536    .text.bitrev32:0000000000000000 bitrev32

NO UNDEFINED SYMBOLS
