   1               		.file	"timer.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               		.section	.text.timer_init,"ax",@progbits
  12               	.global	timer_init
  14               	timer_init:
  15               	.LFB0:
  16               		.file 1 "../tmk_core/common/avr/timer.c"
   1:../tmk_core/common/avr/timer.c **** /*
   2:../tmk_core/common/avr/timer.c **** Copyright 2011 Jun Wako <wakojun@gmail.com>
   3:../tmk_core/common/avr/timer.c **** 
   4:../tmk_core/common/avr/timer.c **** This program is free software: you can redistribute it and/or modify
   5:../tmk_core/common/avr/timer.c **** it under the terms of the GNU General Public License as published by
   6:../tmk_core/common/avr/timer.c **** the Free Software Foundation, either version 2 of the License, or
   7:../tmk_core/common/avr/timer.c **** (at your option) any later version.
   8:../tmk_core/common/avr/timer.c **** 
   9:../tmk_core/common/avr/timer.c **** This program is distributed in the hope that it will be useful,
  10:../tmk_core/common/avr/timer.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../tmk_core/common/avr/timer.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../tmk_core/common/avr/timer.c **** GNU General Public License for more details.
  13:../tmk_core/common/avr/timer.c **** 
  14:../tmk_core/common/avr/timer.c **** You should have received a copy of the GNU General Public License
  15:../tmk_core/common/avr/timer.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../tmk_core/common/avr/timer.c **** */
  17:../tmk_core/common/avr/timer.c **** 
  18:../tmk_core/common/avr/timer.c **** #include <avr/io.h>
  19:../tmk_core/common/avr/timer.c **** #include <avr/interrupt.h>
  20:../tmk_core/common/avr/timer.c **** #include <stdint.h>
  21:../tmk_core/common/avr/timer.c **** #include "timer_avr.h"
  22:../tmk_core/common/avr/timer.c **** #include "timer.h"
  23:../tmk_core/common/avr/timer.c **** 
  24:../tmk_core/common/avr/timer.c **** 
  25:../tmk_core/common/avr/timer.c **** // counter resolution 1ms
  26:../tmk_core/common/avr/timer.c **** // NOTE: union { uint32_t timer32; struct { uint16_t dummy; uint16_t timer16; }}
  27:../tmk_core/common/avr/timer.c **** volatile uint32_t timer_count = 0;
  28:../tmk_core/common/avr/timer.c **** 
  29:../tmk_core/common/avr/timer.c **** void timer_init(void)
  30:../tmk_core/common/avr/timer.c **** {
  17               		.loc 1 30 0
  18               		.cfi_startproc
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
  31:../tmk_core/common/avr/timer.c ****     // Timer0 CTC mode
  32:../tmk_core/common/avr/timer.c ****     TCCR0A = 0x02;
  23               		.loc 1 32 0
  24 0000 82E0      		ldi r24,lo8(2)
  25 0002 84BD      		out 0x24,r24
  33:../tmk_core/common/avr/timer.c **** 
  34:../tmk_core/common/avr/timer.c **** #if TIMER_PRESCALER == 1
  35:../tmk_core/common/avr/timer.c ****     TCCR0B = 0x01;
  36:../tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 8
  37:../tmk_core/common/avr/timer.c ****     TCCR0B = 0x02;
  38:../tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 64
  39:../tmk_core/common/avr/timer.c ****     TCCR0B = 0x03;
  26               		.loc 1 39 0
  27 0004 93E0      		ldi r25,lo8(3)
  28 0006 95BD      		out 0x25,r25
  40:../tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 256
  41:../tmk_core/common/avr/timer.c ****     TCCR0B = 0x04;
  42:../tmk_core/common/avr/timer.c **** #elif TIMER_PRESCALER == 1024
  43:../tmk_core/common/avr/timer.c ****     TCCR0B = 0x05;
  44:../tmk_core/common/avr/timer.c **** #else
  45:../tmk_core/common/avr/timer.c **** #   error "Timer prescaler value is NOT vaild."
  46:../tmk_core/common/avr/timer.c **** #endif
  47:../tmk_core/common/avr/timer.c **** 
  48:../tmk_core/common/avr/timer.c ****     OCR0A = TIMER_RAW_TOP;
  29               		.loc 1 48 0
  30 0008 9AEF      		ldi r25,lo8(-6)
  31 000a 97BD      		out 0x27,r25
  49:../tmk_core/common/avr/timer.c ****     TIMSK0 = (1<<OCIE0A);
  32               		.loc 1 49 0
  33 000c 8093 6E00 		sts 110,r24
  34 0010 0895      		ret
  35               		.cfi_endproc
  36               	.LFE0:
  38               		.section	.text.timer_clear,"ax",@progbits
  39               	.global	timer_clear
  41               	timer_clear:
  42               	.LFB1:
  50:../tmk_core/common/avr/timer.c **** }
  51:../tmk_core/common/avr/timer.c **** 
  52:../tmk_core/common/avr/timer.c **** inline
  53:../tmk_core/common/avr/timer.c **** void timer_clear(void)
  54:../tmk_core/common/avr/timer.c **** {
  43               		.loc 1 54 0
  44               		.cfi_startproc
  45               	/* prologue: function */
  46               	/* frame size = 0 */
  47               	/* stack size = 0 */
  48               	.L__stack_usage = 0
  55:../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
  49               		.loc 1 55 0
  50 0000 8FB7      		in r24,__SREG__
  51               	.LVL0:
  56:../tmk_core/common/avr/timer.c ****     cli();
  52               		.loc 1 56 0
  53               	/* #APP */
  54               	 ;  56 "../tmk_core/common/avr/timer.c" 1
  55 0002 F894      		cli
  56               	 ;  0 "" 2
  57:../tmk_core/common/avr/timer.c ****     timer_count = 0;
  57               		.loc 1 57 0
  58               	/* #NOAPP */
  59 0004 1092 0000 		sts timer_count,__zero_reg__
  60 0008 1092 0000 		sts timer_count+1,__zero_reg__
  61 000c 1092 0000 		sts timer_count+2,__zero_reg__
  62 0010 1092 0000 		sts timer_count+3,__zero_reg__
  58:../tmk_core/common/avr/timer.c ****     SREG = sreg;
  63               		.loc 1 58 0
  64 0014 8FBF      		out __SREG__,r24
  65 0016 0895      		ret
  66               		.cfi_endproc
  67               	.LFE1:
  69               		.section	.text.timer_read,"ax",@progbits
  70               	.global	timer_read
  72               	timer_read:
  73               	.LFB2:
  59:../tmk_core/common/avr/timer.c **** }
  60:../tmk_core/common/avr/timer.c **** 
  61:../tmk_core/common/avr/timer.c **** inline
  62:../tmk_core/common/avr/timer.c **** uint16_t timer_read(void)
  63:../tmk_core/common/avr/timer.c **** {
  74               		.loc 1 63 0
  75               		.cfi_startproc
  76               	/* prologue: function */
  77               	/* frame size = 0 */
  78               	/* stack size = 0 */
  79               	.L__stack_usage = 0
  64:../tmk_core/common/avr/timer.c ****     uint32_t t;
  65:../tmk_core/common/avr/timer.c **** 
  66:../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
  80               		.loc 1 66 0
  81 0000 2FB7      		in r18,__SREG__
  82               	.LVL1:
  67:../tmk_core/common/avr/timer.c ****     cli();
  83               		.loc 1 67 0
  84               	/* #APP */
  85               	 ;  67 "../tmk_core/common/avr/timer.c" 1
  86 0002 F894      		cli
  87               	 ;  0 "" 2
  68:../tmk_core/common/avr/timer.c ****     t = timer_count;
  88               		.loc 1 68 0
  89               	/* #NOAPP */
  90 0004 8091 0000 		lds r24,timer_count
  91 0008 9091 0000 		lds r25,timer_count+1
  92 000c A091 0000 		lds r26,timer_count+2
  93 0010 B091 0000 		lds r27,timer_count+3
  69:../tmk_core/common/avr/timer.c ****     SREG = sreg;
  94               		.loc 1 69 0
  95 0014 2FBF      		out __SREG__,r18
  70:../tmk_core/common/avr/timer.c **** 
  71:../tmk_core/common/avr/timer.c ****     return (t & 0xFFFF);
  72:../tmk_core/common/avr/timer.c **** }
  96               		.loc 1 72 0
  97 0016 0895      		ret
  98               		.cfi_endproc
  99               	.LFE2:
 101               		.section	.text.timer_read32,"ax",@progbits
 102               	.global	timer_read32
 104               	timer_read32:
 105               	.LFB3:
  73:../tmk_core/common/avr/timer.c **** 
  74:../tmk_core/common/avr/timer.c **** inline
  75:../tmk_core/common/avr/timer.c **** uint32_t timer_read32(void)
  76:../tmk_core/common/avr/timer.c **** {
 106               		.loc 1 76 0
 107               		.cfi_startproc
 108               	/* prologue: function */
 109               	/* frame size = 0 */
 110               	/* stack size = 0 */
 111               	.L__stack_usage = 0
  77:../tmk_core/common/avr/timer.c ****     uint32_t t;
  78:../tmk_core/common/avr/timer.c **** 
  79:../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
 112               		.loc 1 79 0
 113 0000 2FB7      		in r18,__SREG__
 114               	.LVL2:
  80:../tmk_core/common/avr/timer.c ****     cli();
 115               		.loc 1 80 0
 116               	/* #APP */
 117               	 ;  80 "../tmk_core/common/avr/timer.c" 1
 118 0002 F894      		cli
 119               	 ;  0 "" 2
  81:../tmk_core/common/avr/timer.c ****     t = timer_count;
 120               		.loc 1 81 0
 121               	/* #NOAPP */
 122 0004 6091 0000 		lds r22,timer_count
 123 0008 7091 0000 		lds r23,timer_count+1
 124 000c 8091 0000 		lds r24,timer_count+2
 125 0010 9091 0000 		lds r25,timer_count+3
 126               	.LVL3:
  82:../tmk_core/common/avr/timer.c ****     SREG = sreg;
 127               		.loc 1 82 0
 128 0014 2FBF      		out __SREG__,r18
  83:../tmk_core/common/avr/timer.c **** 
  84:../tmk_core/common/avr/timer.c ****     return t;
  85:../tmk_core/common/avr/timer.c **** }
 129               		.loc 1 85 0
 130 0016 0895      		ret
 131               		.cfi_endproc
 132               	.LFE3:
 134               		.section	.text.timer_elapsed,"ax",@progbits
 135               	.global	timer_elapsed
 137               	timer_elapsed:
 138               	.LFB4:
  86:../tmk_core/common/avr/timer.c **** 
  87:../tmk_core/common/avr/timer.c **** inline
  88:../tmk_core/common/avr/timer.c **** uint16_t timer_elapsed(uint16_t last)
  89:../tmk_core/common/avr/timer.c **** {
 139               		.loc 1 89 0
 140               		.cfi_startproc
 141               	.LVL4:
 142 0000 CF92      		push r12
 143               	.LCFI0:
 144               		.cfi_def_cfa_offset 3
 145               		.cfi_offset 12, -2
 146 0002 DF92      		push r13
 147               	.LCFI1:
 148               		.cfi_def_cfa_offset 4
 149               		.cfi_offset 13, -3
 150 0004 EF92      		push r14
 151               	.LCFI2:
 152               		.cfi_def_cfa_offset 5
 153               		.cfi_offset 14, -4
 154 0006 FF92      		push r15
 155               	.LCFI3:
 156               		.cfi_def_cfa_offset 6
 157               		.cfi_offset 15, -5
 158 0008 0F93      		push r16
 159               	.LCFI4:
 160               		.cfi_def_cfa_offset 7
 161               		.cfi_offset 16, -6
 162 000a 1F93      		push r17
 163               	.LCFI5:
 164               		.cfi_def_cfa_offset 8
 165               		.cfi_offset 17, -7
 166               	/* prologue: function */
 167               	/* frame size = 0 */
 168               	/* stack size = 6 */
 169               	.L__stack_usage = 6
  90:../tmk_core/common/avr/timer.c ****     uint32_t t;
  91:../tmk_core/common/avr/timer.c **** 
  92:../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
 170               		.loc 1 92 0
 171 000c 2FB7      		in r18,__SREG__
 172               	.LVL5:
  93:../tmk_core/common/avr/timer.c ****     cli();
 173               		.loc 1 93 0
 174               	/* #APP */
 175               	 ;  93 "../tmk_core/common/avr/timer.c" 1
 176 000e F894      		cli
 177               	 ;  0 "" 2
  94:../tmk_core/common/avr/timer.c ****     t = timer_count;
 178               		.loc 1 94 0
 179               	/* #NOAPP */
 180 0010 4091 0000 		lds r20,timer_count
 181 0014 5091 0000 		lds r21,timer_count+1
 182 0018 6091 0000 		lds r22,timer_count+2
 183 001c 7091 0000 		lds r23,timer_count+3
 184               	.LVL6:
  95:../tmk_core/common/avr/timer.c ****     SREG = sreg;
 185               		.loc 1 95 0
 186 0020 2FBF      		out __SREG__,r18
  96:../tmk_core/common/avr/timer.c **** 
  97:../tmk_core/common/avr/timer.c ****     return TIMER_DIFF_16((t & 0xFFFF), last);
 187               		.loc 1 97 0
 188 0022 6A01      		movw r12,r20
 189 0024 7B01      		movw r14,r22
 190 0026 EE24      		clr r14
 191 0028 FF24      		clr r15
 192 002a 8C01      		movw r16,r24
 193 002c 20E0      		ldi r18,0
 194 002e 30E0      		ldi r19,0
 195               	.LVL7:
 196 0030 C016      		cp r12,r16
 197 0032 D106      		cpc r13,r17
 198 0034 E206      		cpc r14,r18
 199 0036 F306      		cpc r15,r19
 200 0038 00F4      		brsh .L8
 201 003a 4150      		subi r20,1
 202 003c 5109      		sbc r21,__zero_reg__
 203               	.LVL8:
 204               	.L8:
 205               		.loc 1 97 0 is_stmt 0 discriminator 2
 206 003e 9A01      		movw r18,r20
 207 0040 281B      		sub r18,r24
 208 0042 390B      		sbc r19,r25
 209 0044 C901      		movw r24,r18
 210               	.LVL9:
 211               	/* epilogue start */
  98:../tmk_core/common/avr/timer.c **** }
 212               		.loc 1 98 0 is_stmt 1 discriminator 2
 213 0046 1F91      		pop r17
 214 0048 0F91      		pop r16
 215               	.LVL10:
 216 004a FF90      		pop r15
 217 004c EF90      		pop r14
 218 004e DF90      		pop r13
 219 0050 CF90      		pop r12
 220 0052 0895      		ret
 221               		.cfi_endproc
 222               	.LFE4:
 224               		.section	.text.timer_elapsed32,"ax",@progbits
 225               	.global	timer_elapsed32
 227               	timer_elapsed32:
 228               	.LFB5:
  99:../tmk_core/common/avr/timer.c **** 
 100:../tmk_core/common/avr/timer.c **** inline
 101:../tmk_core/common/avr/timer.c **** uint32_t timer_elapsed32(uint32_t last)
 102:../tmk_core/common/avr/timer.c **** {
 229               		.loc 1 102 0
 230               		.cfi_startproc
 231               	.LVL11:
 232 0000 CF92      		push r12
 233               	.LCFI6:
 234               		.cfi_def_cfa_offset 3
 235               		.cfi_offset 12, -2
 236 0002 DF92      		push r13
 237               	.LCFI7:
 238               		.cfi_def_cfa_offset 4
 239               		.cfi_offset 13, -3
 240 0004 EF92      		push r14
 241               	.LCFI8:
 242               		.cfi_def_cfa_offset 5
 243               		.cfi_offset 14, -4
 244 0006 FF92      		push r15
 245               	.LCFI9:
 246               		.cfi_def_cfa_offset 6
 247               		.cfi_offset 15, -5
 248 0008 0F93      		push r16
 249               	.LCFI10:
 250               		.cfi_def_cfa_offset 7
 251               		.cfi_offset 16, -6
 252 000a 1F93      		push r17
 253               	.LCFI11:
 254               		.cfi_def_cfa_offset 8
 255               		.cfi_offset 17, -7
 256               	/* prologue: function */
 257               	/* frame size = 0 */
 258               	/* stack size = 6 */
 259               	.L__stack_usage = 6
 103:../tmk_core/common/avr/timer.c ****     uint32_t t;
 104:../tmk_core/common/avr/timer.c **** 
 105:../tmk_core/common/avr/timer.c ****     uint8_t sreg = SREG;
 260               		.loc 1 105 0
 261 000c 2FB7      		in r18,__SREG__
 262               	.LVL12:
 106:../tmk_core/common/avr/timer.c ****     cli();
 263               		.loc 1 106 0
 264               	/* #APP */
 265               	 ;  106 "../tmk_core/common/avr/timer.c" 1
 266 000e F894      		cli
 267               	 ;  0 "" 2
 107:../tmk_core/common/avr/timer.c ****     t = timer_count;
 268               		.loc 1 107 0
 269               	/* #NOAPP */
 270 0010 C090 0000 		lds r12,timer_count
 271 0014 D090 0000 		lds r13,timer_count+1
 272 0018 E090 0000 		lds r14,timer_count+2
 273 001c F090 0000 		lds r15,timer_count+3
 274               	.LVL13:
 108:../tmk_core/common/avr/timer.c ****     SREG = sreg;
 275               		.loc 1 108 0
 276 0020 2FBF      		out __SREG__,r18
 277 0022 9701      		movw r18,r14
 278 0024 8601      		movw r16,r12
 279 0026 061B      		sub r16,r22
 280 0028 170B      		sbc r17,r23
 281 002a 280B      		sbc r18,r24
 282 002c 390B      		sbc r19,r25
 109:../tmk_core/common/avr/timer.c **** 
 110:../tmk_core/common/avr/timer.c ****     return TIMER_DIFF_32(t, last);
 283               		.loc 1 110 0
 284 002e C616      		cp r12,r22
 285 0030 D706      		cpc r13,r23
 286 0032 E806      		cpc r14,r24
 287 0034 F906      		cpc r15,r25
 288 0036 00F0      		brlo .L11
 289               		.loc 1 110 0 is_stmt 0 discriminator 1
 290 0038 C901      		movw r24,r18
 291 003a B801      		movw r22,r16
 292               	.LVL14:
 293 003c 00C0      		rjmp .L12
 294               	.LVL15:
 295               	.L11:
 296               		.loc 1 110 0 discriminator 2
 297 003e C901      		movw r24,r18
 298 0040 B801      		movw r22,r16
 299               	.LVL16:
 300 0042 6150      		subi r22,1
 301 0044 7109      		sbc r23,__zero_reg__
 302 0046 8109      		sbc r24,__zero_reg__
 303 0048 9109      		sbc r25,__zero_reg__
 304               	.L12:
 305               	/* epilogue start */
 111:../tmk_core/common/avr/timer.c **** }
 306               		.loc 1 111 0 is_stmt 1 discriminator 4
 307 004a 1F91      		pop r17
 308 004c 0F91      		pop r16
 309 004e FF90      		pop r15
 310 0050 EF90      		pop r14
 311 0052 DF90      		pop r13
 312 0054 CF90      		pop r12
 313               	.LVL17:
 314 0056 0895      		ret
 315               		.cfi_endproc
 316               	.LFE5:
 318               		.section	.text.__vector_21,"ax",@progbits
 319               	.global	__vector_21
 321               	__vector_21:
 322               	.LFB6:
 112:../tmk_core/common/avr/timer.c **** 
 113:../tmk_core/common/avr/timer.c **** // excecuted once per 1ms.(excess for just timer count?)
 114:../tmk_core/common/avr/timer.c **** ISR(TIMER0_COMPA_vect)
 115:../tmk_core/common/avr/timer.c **** {
 323               		.loc 1 115 0
 324               		.cfi_startproc
 325 0000 1F92      		push r1
 326               	.LCFI12:
 327               		.cfi_def_cfa_offset 3
 328               		.cfi_offset 1, -2
 329 0002 0F92      		push r0
 330               	.LCFI13:
 331               		.cfi_def_cfa_offset 4
 332               		.cfi_offset 0, -3
 333 0004 0FB6      		in r0,__SREG__
 334 0006 0F92      		push r0
 335 0008 1124      		clr __zero_reg__
 336 000a 8F93      		push r24
 337               	.LCFI14:
 338               		.cfi_def_cfa_offset 5
 339               		.cfi_offset 24, -4
 340 000c 9F93      		push r25
 341               	.LCFI15:
 342               		.cfi_def_cfa_offset 6
 343               		.cfi_offset 25, -5
 344 000e AF93      		push r26
 345               	.LCFI16:
 346               		.cfi_def_cfa_offset 7
 347               		.cfi_offset 26, -6
 348 0010 BF93      		push r27
 349               	.LCFI17:
 350               		.cfi_def_cfa_offset 8
 351               		.cfi_offset 27, -7
 352               	/* prologue: Signal */
 353               	/* frame size = 0 */
 354               	/* stack size = 7 */
 355               	.L__stack_usage = 7
 116:../tmk_core/common/avr/timer.c ****     timer_count++;
 356               		.loc 1 116 0
 357 0012 8091 0000 		lds r24,timer_count
 358 0016 9091 0000 		lds r25,timer_count+1
 359 001a A091 0000 		lds r26,timer_count+2
 360 001e B091 0000 		lds r27,timer_count+3
 361 0022 0196      		adiw r24,1
 362 0024 A11D      		adc r26,__zero_reg__
 363 0026 B11D      		adc r27,__zero_reg__
 364 0028 8093 0000 		sts timer_count,r24
 365 002c 9093 0000 		sts timer_count+1,r25
 366 0030 A093 0000 		sts timer_count+2,r26
 367 0034 B093 0000 		sts timer_count+3,r27
 368               	/* epilogue start */
 117:../tmk_core/common/avr/timer.c **** }
 369               		.loc 1 117 0
 370 0038 BF91      		pop r27
 371 003a AF91      		pop r26
 372 003c 9F91      		pop r25
 373 003e 8F91      		pop r24
 374 0040 0F90      		pop r0
 375 0042 0FBE      		out __SREG__,r0
 376 0044 0F90      		pop r0
 377 0046 1F90      		pop r1
 378 0048 1895      		reti
 379               		.cfi_endproc
 380               	.LFE6:
 382               	.global	timer_count
 383               		.section	.bss.timer_count,"aw",@nobits
 386               	timer_count:
 387 0000 0000 0000 		.zero	4
 388               		.text
 389               	.Letext0:
 390               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 timer.c
     /tmp/ccqIISvM.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccqIISvM.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccqIISvM.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccqIISvM.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccqIISvM.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccqIISvM.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccqIISvM.s:14     .text.timer_init:0000000000000000 timer_init
     /tmp/ccqIISvM.s:41     .text.timer_clear:0000000000000000 timer_clear
     /tmp/ccqIISvM.s:386    .bss.timer_count:0000000000000000 timer_count
     /tmp/ccqIISvM.s:72     .text.timer_read:0000000000000000 timer_read
     /tmp/ccqIISvM.s:104    .text.timer_read32:0000000000000000 timer_read32
     /tmp/ccqIISvM.s:137    .text.timer_elapsed:0000000000000000 timer_elapsed
     /tmp/ccqIISvM.s:227    .text.timer_elapsed32:0000000000000000 timer_elapsed32
     /tmp/ccqIISvM.s:321    .text.__vector_21:0000000000000000 __vector_21

UNDEFINED SYMBOLS
__do_clear_bss
